#!/bin/sh /etc/rc.common
START=95
STOP=10

USE_PROCD=1

PROG=/usr/sbin/lora_pkt_fwd

reset_sx1301_board ()
{
	local pin=1

	if [ -d "/sys/class/gpio/pioA${pin}" ]
	then
		echo 1 > /dev/null
	else
		echo ${pin} > /sys/class/gpio/export
		echo "out" > /sys/class/gpio/pioA${pin}/direction
	fi

	echo "1" > /sys/class/gpio/pioA${pin}/value
	sleep 5
	echo "0" > /sys/class/gpio/pioA${pin}/value
	sleep 1
	echo "0" > /sys/class/gpio/pioA${pin}/value

	logger "SX1301 reset completed"
}

set_gateway_ID()
{
	# get gateway ID from its MAC address to generate an EUI-64 address
	GWID_MIDFIX="fffe"
	GWID_BEGIN=$(ip link show eth0 | awk '/ether/ {print $2}' | awk -F\: '{print $1$2$3}')
	GWID_END=$(ip link show eth0 | awk '/ether/ {print $2}' | awk -F\: '{print $4$5$6}')

	uci set lora-global.gateway_conf.gateway_ID="$GWID_BEGIN$GWID_MIDFIX$GWID_END"
	uci commit
	logger "gateway ID set to $GWID_BEGIN$GWID_MIDFIX$GWID_END"
}

generate_global_conf()
{
	logger "Checking frequency plan ..."
	FREQ=$(cat /sys/bus/i2c/devices/4-0060/product_type)

	if [ -z "$FREQ" ];
	then
		logger "Product type detection fail ... defaulting to EU868"
		FREQ="EU868"
	fi

	if [ ! -e /etc/lora/global_conf_"$FREQ"_2dBi_indoor.json ] || [ ! -e /etc/lora/global_conf_"$FREQ"_4dBi_outdoor.json ];
	then
		logger "No configuration file for $FREQ ... defaulting to EU868"
		FREQ="EU868"
	fi

	logger "Frequency plan configured to $FREQ"
	uci set lora-global.global.freq_plan="$FREQ"
	uci commit

	logger "Generate /etc/lora/local_conf.json"
	logger "Generate /etc/lora/global_conf.json"
	gen_lora_global_conf
}

service_triggers()
{
	# Restart in case of network change
	procd_add_reload_trigger "lora-global" "network"
}

reload_service()
{
	logger "Reload lora_pkg_fwd service"
	# Explicitly restart service
	stop
	start
}

start_service()
{
	logger "Reset SX1301"
	reset_sx1301_board

	set_gateway_ID

	generate_global_conf

	procd_open_instance

	procd_set_param command $PROG

	procd_set_param respawn

	procd_set_param stdout 1
	procd_set_param stderr 1

	procd_close_instance
}
