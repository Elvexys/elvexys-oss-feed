Index: packet_forwarder-4.0.1/lora_pkt_fwd/src/jitqueue.c
===================================================================
--- packet_forwarder-4.0.1.orig/lora_pkt_fwd/src/jitqueue.c
+++ packet_forwarder-4.0.1/lora_pkt_fwd/src/jitqueue.c
@@ -16,8 +16,7 @@ Maintainer: Michael Coracin
 /* -------------------------------------------------------------------------- */
 /* --- DEPENDANCIES --------------------------------------------------------- */
 
-#define _GNU_SOURCE     /* needed for qsort_r to be defined */
-#include <stdlib.h>     /* qsort_r */
+#include <stdlib.h>
 #include <stdio.h>      /* printf, fprintf, snprintf, fopen, fputs */
 #include <string.h>     /* memset, memcpy */
 #include <pthread.h>
@@ -108,15 +107,14 @@ int compare(const void *a, const void *b
 }
 
 void jit_sort_queue(struct jit_queue_s *queue) {
-    int counter = 0;
 
     if (queue->num_pkt == 0) {
         return;
     }
 
     MSG_DEBUG(DEBUG_JIT, "sorting queue in ascending order packet timestamp - queue size:%u\n", queue->num_pkt);
-    qsort_r(queue->nodes, queue->num_pkt, sizeof(queue->nodes[0]), compare, &counter);
-    MSG_DEBUG(DEBUG_JIT, "sorting queue done - swapped:%d\n", counter);
+    qsort(queue->nodes, queue->num_pkt, sizeof(queue->nodes[0]), compare);
+    MSG_DEBUG(DEBUG_JIT, "sorting queue done - swapped\n");
 }
 
 bool jit_collision_test(uint32_t p1_count_us, uint32_t p1_pre_delay, uint32_t p1_post_delay, uint32_t p2_count_us, uint32_t p2_pre_delay, uint32_t p2_post_delay) {
